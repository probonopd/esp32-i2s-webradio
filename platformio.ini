; The author of the sound library states:
; Really good results can only be achieved with 2 cores.
; Please use the classic ESP32 or the ESP32-S3.
; Unfortunately, the ESP32-S2 and -C3 do not have the required performance.
; https://github.com/schreibfaul1/ESP32-audioI2S/issues/387#issuecomment-1284483538

; Common variables shared by all environments
[common]
framework = arduino
build_flags =
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -v
lib_deps = 
  https://github.com/schreibfaul1/ESP32-audioI2S.git#ea28787 ; https://github.com/schreibfaul1/ESP32-audioI2S/issues/443#issuecomment-1362798357
  https://github.com/tzapu/WiFiManager.git#297123b
  https://github.com/me-no-dev/ESPAsyncWebServer.git#f71e3d4
  https://github.com/crankyoldgit/IRremoteESP8266.git#v2.8.4
  https://github.com/stevemarple/IniFile#v1.3.0

; Normal ESP32  
[env:esp32]
platform = espressif32@6.0.1
board = esp32dev
board_build.partitions = min_spiffs.csv
framework = ${common.framework}
lib_deps = ${common.lib_deps}

; Single Core ESP32-S2
[env:esp32s2]
platform = espressif32@6.0.1
board = lolin_s2_mini
board_build.partitions = min_spiffs.csv
framework = ${common.framework}
lib_deps = ${common.lib_deps}

; Dual Core ESP32-S3
;[env:esp32s3]
;platform = espressif32@6.0.1
;board = esp32-s3-devkitc-1
;board_build.partitions = min_spiffs.csv
;framework = ${common.framework}
;lib_deps = ${common.lib_deps}

; RISC-V ESP32-C3
;[env:esp32c3]
;platform = espressif32@6.0.1
;board = esp32-c3-devkitm-1
;board_build.partitions = min_spiffs.csv
;framework = ${common.framework}
;lib_deps = ${common.lib_deps}
;; We are using this for ifdefs in the code
;build_flags =
;    -DESP32C3
